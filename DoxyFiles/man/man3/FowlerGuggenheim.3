.TH "FowlerGuggenheim" 3 "Segunda, 3 de Outubro de 2022" "Version 1.0.0" "Isotherm++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FowlerGuggenheim \- Classe com as equacoes da isoterma de \fBFowler\fP - Guggenheim  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <FowlerGuggenheim\&.h>\fP
.PP
Subclasse de \fBThreeParameters\fP e \fBIsothermTemplate< FowlerGuggenheim >\fP\&.
.SS "Membros Públicos"

.in +1c
.ti -1c
.RI "\fBDefineIdentity\fP ('Fowler \- Guggenheim', ID::FowlerGuggenheim)"
.br
.RI "Definiçao de \fBID\fP para esta classe para fins de identificaçao de erros\&. "
.ti -1c
.RI "\fBFowlerGuggenheim\fP ()=default"
.br
.ti -1c
.RI "\fBFowlerGuggenheim\fP (const \fBFowlerGuggenheim\fP &_fowlerguggenheim)=default"
.br
.RI "Construtora de cópia\&. "
.ti -1c
.RI "virtual \fB~FowlerGuggenheim\fP ()=default"
.br
.RI "Destrutora\&. "
.ti -1c
.RI "\fBFowlerGuggenheim\fP (const Real &_qmax, const Real &_k1, const Real &_k2, const Real &_rgas=Isotherm::RGASCONST)"
.br
.RI "Construtora com os parametros que definem a isoterma de \fBFowler\fP - Guggenheim\&. "
.ti -1c
.RI "\fBFowlerGuggenheim\fP & \fBoperator=\fP (const \fBFowlerGuggenheim\fP &_orig)=default"
.br
.RI "Sobrecarga do operador =\&. "
.ti -1c
.RI "Real \fBQmax\fP () const"
.br
.RI "Funçao que informa o valor da capacidade maxima de adsorçao\&. "
.ti -1c
.RI "Real \fBK1\fP () const"
.br
.RI "Funçao que retorna o coeficiente associado a constante de \fBFowler\fP - Guggenheim\&. "
.ti -1c
.RI "Real \fBK2\fP () const"
.br
.RI "Funçao que retorna o valor do expoente da isoterma de \fBFowler\fP - Guggenheim\&. "
.ti -1c
.RI "Real \fBRgas\fP () const"
.br
.RI "Funçao que retorna o valor da constante universal dos gases\&. "
.ti -1c
.RI "void \fBQmax\fP (const Real &_qmax)"
.br
.RI "Funçao para alterar a capacidade maxima de adsorçao\&. "
.ti -1c
.RI "void \fBK1\fP (const Real &_k1)"
.br
.RI "Funçao que altera o coeficiente associado a constante de equilibrio de Fowler-Guggenheim\&. "
.ti -1c
.RI "void \fBK2\fP (const Real &_k2)"
.br
.RI "Funçao para alterar o valor da constante de iteraçao entre as moleculas adsorvidas\&. "
.ti -1c
.RI "void \fBRgas\fP (const Real &_rgas)"
.br
.RI "Funçao para alterar o valor da constante universal dos gases\&. "
.ti -1c
.RI "virtual Real \fBQe\fP (const Real &_c, const Real &_temp) const"
.br
.RI "Funçao que calcula a quantidade de sorçao no equilibrio\&. "
.ti -1c
.RI "Real \fBQe\fP (const Real &_c) const override"
.br
.ti -1c
.RI "virtual std::unique_ptr< \fBIsotherm\fP > \fBCloneImplementation\fP () const override"
.br
.ti -1c
.RI "Real \fBFQe\fP (const Real &) const"
.br
.in -1c
.SS "Outros membros herdados"
.SH "Descrição detalhada"
.PP 
Classe com as equacoes da isoterma de \fBFowler\fP - Guggenheim 

Isoterma com tras parametros, $ q_{max} $, $ K_1 $ e $ K_2 $, cujas formulas sao as seguintes: \\begin{align} [[f(\\theta = K_1C-\\frac{\\theta}{1-\\theta}e^{\\frac{K_2\\theta}{RT}}=0] \\end{align} Um artigo de referancia pode ser encontrado \fCaqui\fP\&. 
.PP
\fBAutores\fP
.RS 4
Lara Botelho Brum 
.PP
Joao Flavio Vieira de Vasconcellos 
.PP
Iasmim Barboza Storck 
.RE
.PP
\fBVersão\fP
.RS 4
1\&.0 
.RE
.PP
\fBData\fP
.RS 4
2022 
.RE
.PP
\fBBug\fP
.RS 4
Nao ha bugs conhecidos\&.
.RE
.PP
.PP
\fBCopyright\fP
.RS 4
GNU Public License\&. 
.RE
.PP

.SH "Construtores e Destrutores"
.PP 
.SS "FowlerGuggenheim::FowlerGuggenheim ()\fC [default]\fP"

.PP
Construtora default\&. 
.PP
Uso: 
.PP
.nf
FowlerGuggenheim  var;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros para esta funçao 
.RE
.PP

.SS "FowlerGuggenheim::FowlerGuggenheim (const \fBFowlerGuggenheim\fP & _fowlerguggenheim)\fC [default]\fP"

.PP
Construtora de cópia\&. Uso: 
.PP
.nf
FowlerGuggenheim  var;
FowlerGuggenheim  var1(var);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBFowlerGuggenheim\fP original\&. 
.RE
.PP

.SS "FowlerGuggenheim::FowlerGuggenheim (const Real & _qmax, const Real & _k1, const Real & _k2, const Real & _rgas = \fCIsotherm::RGASCONST\fP)"

.PP
Construtora com os parametros que definem a isoterma de \fBFowler\fP - Guggenheim\&. Uso: 
.PP
.nf
double QMAX(1\&.0);
double K1(1\&.0);
double K2(1\&.0);
Sips  var1(Q1, K1, K2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_qmax\fP Capacidade maxima de adsorçao\&. 
.br
\fI_k1\fP Constante da isortema de \fBFowler\fP - Guggenheim\&. 
.br
\fI_k2\fP Constante do expoente da isoterma de \fBFowler\fP - Guggenheim\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_qmax\fP <= 0\&. 
.br
\fI_k1\fP <= 0\&. 
.br
\fI_k2\fP <= 0\&. 
.RE
.PP

.SH "Funções membros"
.PP 
.SS "virtual std::unique_ptr< \fBIsotherm\fP > FowlerGuggenheim::CloneImplementation () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implementa \fBIsotherm\fP\&.
.SS "FowlerGuggenheim::DefineIdentity ('Fowler \- Guggenheim', ID::FowlerGuggenheim)"

.PP
Definiçao de \fBID\fP para esta classe para fins de identificaçao de erros\&. 
.SS "Real FowlerGuggenheim::K1 () const\fC [inline]\fP"

.PP
Funçao que retorna o coeficiente associado a constante de \fBFowler\fP - Guggenheim\&. Uso: 
.PP
.nf
FowlerGuggenheim var1(QMAX, K1, K2);
double k1 = var1\&.K1();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor do coeficiente associado a constante de \fBFowler\fP - Guggenheim\&. 
.RE
.PP

.SS "void FowlerGuggenheim::K1 (const Real & _k1)\fC [inline]\fP"

.PP
Funçao que altera o coeficiente associado a constante de equilibrio de Fowler-Guggenheim\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double k1(2\&.0);
var1\&.K1(k1);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k1\fP Novo valor do coeficiente associado a constante de equilibrio de Fowler-Guggenheim\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.RE
.PP

.SS "Real FowlerGuggenheim::K2 () const\fC [inline]\fP"

.PP
Funçao que retorna o valor do expoente da isoterma de \fBFowler\fP - Guggenheim\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double k2 = var1\&.K2();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor do expoente da isoterma de \fBFowler\fP - Guggenheim\&. 
.RE
.PP

.SS "void FowlerGuggenheim::K2 (const Real & _k2)\fC [inline]\fP"

.PP
Funçao para alterar o valor da constante de iteraçao entre as moleculas adsorvidas\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double k2(3\&.0);
var1\&.K2(k2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k2\fP Novo valor da constante de iteraçao entre as moleculas adsorvidas\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k2\fP <= 0\&. 
.RE
.PP

.SS "\fBFowlerGuggenheim\fP & FowlerGuggenheim::operator= (const \fBFowlerGuggenheim\fP & _orig)\fC [default]\fP"

.PP
Sobrecarga do operador =\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
FowlerGuggenheim  var2 = var1;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBFowler\fP - Guggenheim original\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Cópia de _orig\&. 
.RE
.PP

.SS "Real FowlerGuggenheim::Qe (const Real & _c) const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplementa \fBIsotherm\fP\&.
.SS "Real FowlerGuggenheim::Qe (const Real & _c, const Real & _temp) const\fC [virtual]\fP"

.PP
Funçao que calcula a quantidade de sorçao no equilibrio\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double ce(1\&.0);
double qe = var1\&.Qe(ce);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_c\fP Concentraçao do soluto\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da quantidade de sorçao no equilibrio\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_c\fP < 0\&. 
.RE
.PP

.PP
Implementa \fBIsotherm\fP\&.
.SS "Real FowlerGuggenheim::Qmax () const\fC [inline]\fP"

.PP
Funçao que informa o valor da capacidade maxima de adsorçao\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double q1 = var1\&.Qmax();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da capacidade maxima de adsorçao\&. 
.RE
.PP

.SS "void FowlerGuggenheim::Qmax (const Real & _qmax)\fC [inline]\fP"

.PP
Funçao para alterar a capacidade maxima de adsorçao\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(QMAX, K1, K2);
double q1(3\&.0);
var1\&.Qmax(q1);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_qmax\fP Novo valor da capacidade maxima de adsorçao\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_qmax\fP <= 0\&. 
.RE
.PP

.SS "Real FowlerGuggenheim::Rgas () const\fC [inline]\fP"

.PP
Funçao que retorna o valor da constante universal dos gases\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(q1, k1);
Real rg = var1\&.Rgas();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da constante universal dos gases\&. 
.RE
.PP

.SS "void FowlerGuggenheim::Rgas (const Real & _rgas)\fC [inline]\fP"

.PP
Funçao para alterar o valor da constante universal dos gases\&. Uso: 
.PP
.nf
FowlerGuggenheim  var1(q1, k1, k2);
Real rgas(62\&.363598221529);
var1\&.Rgas(rgas);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_rgas\fP Novo valor da constante universal dos gases\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_rgas\fP <= 0\&. 
.RE
.PP


.SH "Autor"
.PP 
Gerado automaticamente por Doxygen para Isotherm++ a partir do código-fonte\&.
