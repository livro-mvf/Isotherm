.TH "Temkin" 3 "Segunda, 3 de Outubro de 2022" "Version 1.0.0" "Isotherm++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Temkin \- Classe com as equacoes da isoterma de \fBTemkin\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Temkin\&.h>\fP
.PP
Subclasse de \fBTwoParameters\fP e \fBIsothermTemplate< Temkin >\fP\&.
.SS "Membros Públicos"

.in +1c
.ti -1c
.RI "\fBDefineIdentity\fP ('Temkin', ID::Temkin)"
.br
.RI "Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. "
.ti -1c
.RI "\fBTemkin\fP ()=default"
.br
.RI "Construtora default\&. "
.ti -1c
.RI "\fBTemkin\fP (const \fBTemkin\fP &_orig)=default"
.br
.RI "Construtora de copia\&. "
.ti -1c
.RI "virtual \fB~Temkin\fP ()=default"
.br
.RI "Destrutora\&. "
.ti -1c
.RI "\fBTemkin\fP (const Real &_k1, const Real &_k2, const Real &_rgas=Isotherm::RGASCONST)"
.br
.RI "Construtora com os parametros que definem a isoterma de \fBTemkin\fP\&. "
.ti -1c
.RI "\fBTemkin\fP & \fBoperator=\fP (const \fBTemkin\fP &_orig)=default"
.br
.RI "Sobrecarga do operador =\&. "
.ti -1c
.RI "Real \fBK1\fP () const"
.br
.RI "Funcao que informa o valor da constante da isoterma de \fBTemkin\fP\&. "
.ti -1c
.RI "Real \fBK2\fP () const"
.br
.RI "Funcao que retorna o coeficiente associado a constante de ligacao de equilibrio isotermica\&. "
.ti -1c
.RI "Real \fBRgas\fP () const"
.br
.RI "Funcao que retorna o valor da constante universal dos gases\&. "
.ti -1c
.RI "void \fBK1\fP (const Real &_k1)"
.br
.RI "Funcao para alterar a constante da isoterma de \fBTemkin\fP\&. "
.ti -1c
.RI "void \fBK2\fP (const Real &_k2)"
.br
.RI "Funcao que alterao o coeficiente associado a constante de ligacao de equilibrio isotermica\&. "
.ti -1c
.RI "void \fBRgas\fP (const Real &_rgas)"
.br
.RI "Funcao para alterar o valor da constante universal dos gases\&. "
.ti -1c
.RI "Real \fBQe\fP (const Real &_c, const Real &_temp) const"
.br
.RI "Funcao que calcula a quantidade de sorcao no equilibrio\&. "
.ti -1c
.RI "virtual std::unique_ptr< \fBIsotherm\fP > \fBCloneImplementation\fP () const override"
.br
.in -1c
.SS "Outros membros herdados"
.SH "Descrição detalhada"
.PP 
Classe com as equacoes da isoterma de \fBTemkin\fP\&. 

Isoterma com dois parametros, $ K_1 $ e $ K_2 $, cujas formulas sao as seguintes: \\begin{align} Q_e(C_e, T) = \\frac{R T}{K_2}ln(K_1 C_e ) \\end{align} Um artigo de referencia pode ser encontrado \fCaqui\fP\&. 
.PP
\fBAutores\fP
.RS 4
Iasmim Barboza Storck 
.PP
Lara Botelho Brum 
.PP
Luan Rodrigues Soares de Souza 
.PP
Joao Flavio Vieira de Vasconcellos 
.RE
.PP
\fBVersão\fP
.RS 4
1\&.0 
.RE
.PP
\fBData\fP
.RS 4
2022 
.RE
.PP
\fBBug\fP
.RS 4
Nao ha bugs conhecidos\&.
.RE
.PP
.PP
\fBCopyright\fP
.RS 4
GNU Public License\&. 
.RE
.PP

.SH "Construtores e Destrutores"
.PP 
.SS "Temkin::Temkin ()\fC [default]\fP"

.PP
Construtora default\&. Uso: 
.PP
.nf
Temkin  var;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros para esta funcao 
.RE
.PP

.SS "Temkin::Temkin (const \fBTemkin\fP & _orig)\fC [default]\fP"

.PP
Construtora de copia\&. Uso: 
.PP
.nf
Temkin  var;
Temkin  var1(var);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBTemkin\fP original\&. 
.RE
.PP

.SS "Temkin::Temkin (const Real & _k1, const Real & _k2, const Real & _rgas = \fCIsotherm::RGASCONST\fP)"

.PP
Construtora com os parametros que definem a isoterma de \fBTemkin\fP\&. Uso: 
.PP
.nf
Real q1(1\&.0);
Real k2(1\&.0);
Real RGAS(62\&.363598221529);
Temkin  var1(k1, k2);              // Constante dos gases default
Temkin  var2(k1, k2, RGAS);        // Constante dos gases modificada

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k1\fP Constante da isoterma de \fBTemkin\fP\&. 
.br
\fI_k2\fP Constante de ligacao de equilibrio isotermica\&. 
.br
\fI_rgas\fP Valor da constante universal dos gases diferente do padrao\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.br
\fI_k2\fP <= 0\&. 
.br
\fI_rgas\fP <= 0\&. 
.RE
.PP

.SH "Funções membros"
.PP 
.SS "virtual std::unique_ptr< \fBIsotherm\fP > Temkin::CloneImplementation () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implementa \fBIsotherm\fP\&.
.SS "Temkin::DefineIdentity ('Temkin', ID::Temkin)"

.PP
Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. 
.SS "Real Temkin::K1 () const\fC [inline]\fP"

.PP
Funcao que informa o valor da constante da isoterma de \fBTemkin\fP\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real _k1 = var1\&.K1();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da constante da isoterma de \fBTemkin\fP\&. 
.RE
.PP

.SS "void Temkin::K1 (const Real & _k1)\fC [inline]\fP"

.PP
Funcao para alterar a constante da isoterma de \fBTemkin\fP\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real _k1(3\&.0);
var1\&.K1(_k1);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k1\fP Novo valor da constante da isoterma de \fBTemkin\fP\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.RE
.PP

.SS "Real Temkin::K2 () const\fC [inline]\fP"

.PP
Funcao que retorna o coeficiente associado a constante de ligacao de equilibrio isotermica\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real _k2 = var1\&.K2();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor do coeficiente associado a constante de ligacao de equilibrio isotermica\&. 
.RE
.PP

.SS "void Temkin::K2 (const Real & _k2)\fC [inline]\fP"

.PP
Funcao que alterao o coeficiente associado a constante de ligacao de equilibrio isotermica\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real _k2(2\&.0);
var1\&.K2(_k2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k2\fP Novo valor do coeficiente associado a constante de ligacao de equilibrio isotermica\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k2\fP <= 0\&. 
.RE
.PP

.SS "\fBTemkin\fP & Temkin::operator= (const \fBTemkin\fP & _orig)\fC [default]\fP"

.PP
Sobrecarga do operador =\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Temkin  var2 = var1;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBTemkin\fP original\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Copia de _orig\&. 
.RE
.PP

.SS "Real Temkin::Qe (const Real & _c, const Real & _temp) const\fC [virtual]\fP"

.PP
Funcao que calcula a quantidade de sorcao no equilibrio\&. Uso: 
.PP
.nf
Temkin  var1(q1, k2);
Real ce(1);
Real qe = var1\&.Qe(ce);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_c\fP Concentracao do soluto\&. 
.br
\fI_temp\fP Temperatura em K\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da quantidade de sorcao no equilibrio\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_c\fP k1 < 1\&. 
.RE
.PP

.PP
Implementa \fBIsotherm\fP\&.
.SS "Real Temkin::Rgas () const\fC [inline]\fP"

.PP
Funcao que retorna o valor da constante universal dos gases\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real rg = var1\&.Rgas();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da constante universal dos gases\&. 
.RE
.PP

.SS "void Temkin::Rgas (const Real & _rgas)\fC [inline]\fP"

.PP
Funcao para alterar o valor da constante universal dos gases\&. Uso: 
.PP
.nf
Temkin  var1(k1, k2);
Real rgas(62\&.363598221529);
var1\&.Rgas(rgas);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_rgas\fP Novo valor da constante universal dos gases\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_rgas\fP <= 0\&. 
.RE
.PP


.SH "Autor"
.PP 
Gerado automaticamente por Doxygen para Isotherm++ a partir do código-fonte\&.
