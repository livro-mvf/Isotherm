.TH "RedlichPeterson" 3 "Segunda, 3 de Outubro de 2022" "Version 1.0.0" "Isotherm++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RedlichPeterson \- Classe com as equacoes da isoterma de \fBRedlich\fP - Peterson  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <RedlichPeterson\&.h>\fP
.PP
Subclasse de \fBThreeParameters\fP e \fBIsothermTemplate< RedlichPeterson >\fP\&.
.SS "Membros Públicos"

.in +1c
.ti -1c
.RI "\fBDefineIdentity\fP ('RedlichPeterson', ID::RedlichPeterson)"
.br
.RI "Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. "
.ti -1c
.RI "\fBRedlichPeterson\fP ()=default"
.br
.ti -1c
.RI "\fBRedlichPeterson\fP (const \fBRedlichPeterson\fP &_redlich_peterson)=default"
.br
.RI "Construtora de cópia\&. "
.ti -1c
.RI "virtual \fB~RedlichPeterson\fP ()=default"
.br
.RI "Destrutora\&. "
.ti -1c
.RI "\fBRedlichPeterson\fP (const Real &, const Real &, const Real &)"
.br
.RI "Construtora com os parametros que definem a isoterma de \fBRedlich\fP - Peterson\&. "
.ti -1c
.RI "\fBRedlichPeterson\fP & \fBoperator=\fP (const \fBRedlichPeterson\fP &)=default"
.br
.RI "Sobrecarga do operador =\&. "
.ti -1c
.RI "Real \fBK1\fP () const"
.br
.RI "Funcao que informa o valor da constante de Redlich-Peterson\&. "
.ti -1c
.RI "Real \fBK2\fP () const"
.br
.RI "Funcao que retorna o coeficiente associado a constante de \fBRedlich\fP - Peterson\&. "
.ti -1c
.RI "Real \fBK3\fP () const"
.br
.RI "Funcao que retorna o valor do coeficiente que reflete a heterogeneidade do adsorvente\&. "
.ti -1c
.RI "void \fBK1\fP (const Real &_k1)"
.br
.RI "Funcao para alterar a constante de Redlich-Peterson\&. "
.ti -1c
.RI "void \fBK2\fP (const Real &_k2)"
.br
.RI "Funcao que altera o coeficiente associado a constante de \fBRedlich\fP - Peterson\&. "
.ti -1c
.RI "void \fBK3\fP (const Real &_k3)"
.br
.RI "Funcao para alterar o valor do coeficiente que reflete a heterogeneidade do adsorvente\&. "
.ti -1c
.RI "Real \fBQe\fP (const Real &, const Real &) const"
.br
.RI "Funcao que calcula a quantidade de sorcao no equilibrio\&. "
.ti -1c
.RI "Real \fBQe\fP (const Real &_c) const override"
.br
.ti -1c
.RI "virtual std::unique_ptr< \fBIsotherm\fP > \fBCloneImplementation\fP () const override"
.br
.in -1c
.SS "Outros membros herdados"
.SH "Descrição detalhada"
.PP 
Classe com as equacoes da isoterma de \fBRedlich\fP - Peterson 

Isoterma com tres parametros, $ q_{max} $, $ K_1 $ e $ K_2 $, cujas formulas sao as seguintes: \\begin{align} [Q_e(C_e, T) = \\frac{K_1C}{1+K_2C_e^{K_3}} \\end{align} Um artigo de referencia pode ser encontrado \fCaqui\fP\&. 
.PP
\fBAutores\fP
.RS 4
Luan Rodrigues Soares de Souza 
.PP
Joao Flavio Vieira de Vasconcellos 
.RE
.PP
\fBVersão\fP
.RS 4
1\&.0 
.RE
.PP
\fBData\fP
.RS 4
2022 
.RE
.PP
\fBBug\fP
.RS 4
Nao ha bugs conhecidos\&.
.RE
.PP
.PP
\fBCopyright\fP
.RS 4
GNU Public License\&. 
.RE
.PP

.SH "Construtores e Destrutores"
.PP 
.SS "RedlichPeterson::RedlichPeterson ()\fC [default]\fP"

.PP
Construtora default\&. 
.PP
Uso: 
.PP
.nf
RedlichPeterson  var;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros para esta funcao 
.RE
.PP

.SS "RedlichPeterson::RedlichPeterson (const \fBRedlichPeterson\fP & _redlich_peterson)\fC [default]\fP"

.PP
Construtora de cópia\&. Uso: 
.PP
.nf
RedlichPeterson  var;
RedlichPeterson  var1(var);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBRedlichPeterson\fP original\&. 
.br
 
.RE
.PP

.SS "RedlichPeterson::RedlichPeterson (const Real & _k1, const Real & _k2, const Real & _k3)"

.PP
Construtora com os parametros que definem a isoterma de \fBRedlich\fP - Peterson\&. Uso: 
.PP
.nf
double K1(1\&.0);
double K2(1\&.0);    
double K3(1\&.0);        
RedlichPeterson  var1(K1, K2, K3);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k1\fP Constante de Redlich-Peterson\&. 
.br
 
.br
\fI_k2\fP Constante de Redlich-Peterson\&. 
.br
 
.br
\fI_k3\fP Coeficiente que reflete a heterogeneidade do adsorvente\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.br
\fI_k2\fP <= 0\&. 
.br
\fI_k3\fP <= 0\&. 
.RE
.PP

.SH "Funções membros"
.PP 
.SS "virtual std::unique_ptr< \fBIsotherm\fP > RedlichPeterson::CloneImplementation () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implementa \fBIsotherm\fP\&.
.SS "RedlichPeterson::DefineIdentity ('RedlichPeterson', ID::RedlichPeterson)"

.PP
Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. 
.SS "Real RedlichPeterson::K1 () const\fC [inline]\fP"

.PP
Funcao que informa o valor da constante de Redlich-Peterson\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k1 = var1\&.K1();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da constante de Redlich-Peterson\&. 
.RE
.PP

.SS "void RedlichPeterson::K1 (const Real & _k1)\fC [inline]\fP"

.PP
Funcao para alterar a constante de Redlich-Peterson\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k1(3\&.0);
var1\&.K1(k1);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_qmax\fP Novo valor da constante de Redlich-Peterson\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.RE
.PP

.SS "Real RedlichPeterson::K2 () const\fC [inline]\fP"

.PP
Funcao que retorna o coeficiente associado a constante de \fBRedlich\fP - Peterson\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k2 = var1\&.K2();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor do coeficiente associado a constante de \fBRedlich\fP - Peterson\&. 
.RE
.PP

.SS "void RedlichPeterson::K2 (const Real & _k2)\fC [inline]\fP"

.PP
Funcao que altera o coeficiente associado a constante de \fBRedlich\fP - Peterson\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k2(2\&.0);
var1\&.K2(k2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k2\fP Novo valor do coeficiente associado a constante de \fBRedlichPeterson\fP\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k2\fP <= 0\&. 
.RE
.PP

.SS "Real RedlichPeterson::K3 () const\fC [inline]\fP"

.PP
Funcao que retorna o valor do coeficiente que reflete a heterogeneidade do adsorvente\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k3 = var1\&.K3();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor do coeficiente que reflete a heterogeneidade do adsorvente\&. 
.RE
.PP

.SS "void RedlichPeterson::K3 (const Real & _k3)\fC [inline]\fP"

.PP
Funcao para alterar o valor do coeficiente que reflete a heterogeneidade do adsorvente\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double k3(3\&.0);
var1\&.K3(k3);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k3\fP Novo valor do coeficiente que reflete a heterogeneidade do adsorvente\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k3\fP <= 0\&. 
.br
 
.RE
.PP

.SS "\fBRedlichPeterson\fP & RedlichPeterson::operator= (const \fBRedlichPeterson\fP &)\fC [default]\fP"

.PP
Sobrecarga do operador =\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
RedlichPeterson  var2 = var1;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBRedlichPeterson\fP original\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Cópia de _orig\&. 
.br
 
.RE
.PP

.SS "Real RedlichPeterson::Qe (const Real & _ce, const Real &) const\fC [virtual]\fP"

.PP
Funcao que calcula a quantidade de sorcao no equilibrio\&. Uso: 
.PP
.nf
RedlichPeterson  var1(K1, K2, K3);              
double ce(1\&.0);
double qe = var1\&.Qe(ce);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_c\fP Concentracao do soluto\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da quantidade de sorcao no equilibrio\&. 
.br
 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_c\fP < 0\&. 
.br
 
.RE
.PP

.PP
Implementa \fBIsotherm\fP\&.
.SS "Real RedlichPeterson::Qe (const Real & _c) const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplementa \fBIsotherm\fP\&.

.SH "Autor"
.PP 
Gerado automaticamente por Doxygen para Isotherm++ a partir do código-fonte\&.
