.TH "Jovanovic" 3 "Segunda, 3 de Outubro de 2022" "Version 1.0.0" "Isotherm++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Jovanovic \- Classe com a equacoes da isoterma de \fBJovanovic\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Jovanovic\&.h>\fP
.PP
Subclasse de \fBTwoParameters\fP e \fBIsothermTemplate< Jovanovic >\fP\&.
.SS "Membros Públicos"

.in +1c
.ti -1c
.RI "\fBDefineIdentity\fP ('Jovanovic', ID::Jovanovic)"
.br
.RI "Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. "
.ti -1c
.RI "\fBJovanovic\fP ()=default"
.br
.RI "Construtora default\&. "
.ti -1c
.RI "\fBJovanovic\fP (const \fBJovanovic\fP &_orig)=default"
.br
.RI "Construtora de copia\&. "
.ti -1c
.RI "virtual \fB~Jovanovic\fP ()=default"
.br
.RI "Destrutora\&. "
.ti -1c
.RI "\fBJovanovic\fP (const Real &_k1, const Real &_qmax)"
.br
.RI "Construtora com os parametros que definem a isoterma de \fBJovanovic\fP\&. "
.ti -1c
.RI "\fBJovanovic\fP & \fBoperator=\fP (const \fBJovanovic\fP &)=default"
.br
.RI "Sobrecarga do operador =\&. "
.ti -1c
.RI "Real \fBK1\fP () const"
.br
.RI "Funcao que retorna a constante da isoterma de \fBJovanovic\fP\&. "
.ti -1c
.RI "Real \fBQmax\fP () const"
.br
.RI "Funcao que informa o valor da capacidade maxima de adsorcao\&. "
.ti -1c
.RI "void \fBQmax\fP (const Real &_qmax)"
.br
.RI "Funcao para alterar a capacidade maxima de adsorcao\&. "
.ti -1c
.RI "void \fBK1\fP (const Real &_k1)"
.br
.RI "Funcao que altera a constante da isoterma de \fBJovanovic\fP\&. "
.ti -1c
.RI "Real \fBQe\fP (const Real &_c, const Real &_temp=0) const"
.br
.RI "Funcao que calcula a quantidade de sorcao no equilibrio\&. "
.ti -1c
.RI "virtual std::unique_ptr< \fBIsotherm\fP > \fBCloneImplementation\fP () const override"
.br
.in -1c
.SS "Outros membros herdados"
.SH "Descrição detalhada"
.PP 
Classe com a equacoes da isoterma de \fBJovanovic\fP\&. 

Isoterma com dois parametros, $ q_{max} $ e $ K_1 $, cujas formulas sao as seguintes: \\begin{equation} \\ln( Q_e (C_e)) = \\ln(q_{max}) - K_1 C_e \\end{equation} Um artigo de referencia pode ser encontrado \fCaqui\fP\&. 
.PP
\fBAutores\fP
.RS 4
Iasmim Barboza Storck 
.PP
Lara Botelho Brum 
.PP
Luan Rodrigues Soares de Souza 
.PP
Joao Flavio Vieira de Vasconcellos 
.RE
.PP
\fBData\fP
.RS 4
2022 
.RE
.PP
\fBBug\fP
.RS 4
Nao ha bugs conhecidos\&.
.RE
.PP
.PP
\fBCopyright\fP
.RS 4
GNU Public License\&. 
.RE
.PP

.SH "Construtores e Destrutores"
.PP 
.SS "Jovanovic::Jovanovic ()\fC [default]\fP"

.PP
Construtora default\&. Uso: 
.PP
.nf
Jovanovic  var;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros para esta funcao 
.RE
.PP

.SS "Jovanovic::Jovanovic (const \fBJovanovic\fP & _orig)\fC [default]\fP"

.PP
Construtora de copia\&. Uso: 
.PP
.nf
Jovanovic  var;
Jovanovic  var1(var);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBJovanovic\fP original\&. 
.RE
.PP

.SS "Jovanovic::Jovanovic (const Real & _k1, const Real & _qmax)"

.PP
Construtora com os parametros que definem a isoterma de \fBJovanovic\fP\&. Uso: 
.PP
.nf
Real q1(1\&.0);
Real k1(1\&.0);
Jovanovic  var1(q1, k1);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_qmax\fP Capacidade maxima de adsorcao\&. 
.br
\fI_k1\fP Constante da isoterma de \fBJovanovic\fP\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_qmax\fP <= 0\&. 
.br
\fI_k1\fP <= 0\&. 
.RE
.PP

.SH "Funções membros"
.PP 
.SS "virtual std::unique_ptr< \fBIsotherm\fP > Jovanovic::CloneImplementation () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implementa \fBIsotherm\fP\&.
.SS "Jovanovic::DefineIdentity ('Jovanovic', ID::Jovanovic)"

.PP
Definicao de \fBID\fP para esta classe para fins de identificacao de erros\&. 
.SS "Real Jovanovic::K1 () const\fC [inline]\fP"

.PP
Funcao que retorna a constante da isoterma de \fBJovanovic\fP\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Real k2 = var1\&.K1();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da constante da isoterma de \fBJovanovic\fP\&. 
.RE
.PP

.SS "void Jovanovic::K1 (const Real & _k1)\fC [inline]\fP"

.PP
Funcao que altera a constante da isoterma de \fBJovanovic\fP\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Real k2(2\&.0);
var1\&.K1(k2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_k1\fP Novo valor da constante da isoterma de \fBJovanovic\fP\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_k1\fP <= 0\&. 
.RE
.PP

.SS "\fBJovanovic\fP & Jovanovic::operator= (const \fBJovanovic\fP &)\fC [default]\fP"

.PP
Sobrecarga do operador =\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Jovanovic  var2 = var1;

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_orig\fP Variavel do tipo \fBJovanovic\fP original\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Copia de _orig\&. 
.RE
.PP

.SS "Real Jovanovic::Qe (const Real & _c, const Real & _temp = \fC0\fP) const\fC [virtual]\fP"

.PP
Funcao que calcula a quantidade de sorcao no equilibrio\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Real ce(1);
Real qe = var1\&.Qe(ce);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_c\fP Concentracao do soluto\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da quantidade de sorcao no equilibrio\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_c\fP < 0\&. 
.RE
.PP

.PP
Implementa \fBIsotherm\fP\&.
.SS "Real Jovanovic::Qmax () const\fC [inline]\fP"

.PP
Funcao que informa o valor da capacidade maxima de adsorcao\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Real q2 = var1\&.Qmax();

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI \fP Nao ha parametros\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
Valor da capacidade maxima de adsorcao\&. 
.RE
.PP

.SS "void Jovanovic::Qmax (const Real & _qmax)\fC [inline]\fP"

.PP
Funcao para alterar a capacidade maxima de adsorcao\&. Uso: 
.PP
.nf
Jovanovic  var1(q1, k1);
Real q2(3\&.0);
var1\&.Qmax(q2);

.fi
.PP
 
.PP
\fBParâmetros\fP
.RS 4
\fI_qmax\fP Novo valor da capacidade maxima de adsorcao\&. 
.RE
.PP
\fBExceções\fP
.RS 4
\fI_qmax\fP <= 0\&. 
.RE
.PP


.SH "Autor"
.PP 
Gerado automaticamente por Doxygen para Isotherm++ a partir do código-fonte\&.
